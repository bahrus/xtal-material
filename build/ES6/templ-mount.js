const _cachedTemplates={},fetchInProgress={};export function loadTemplate(a,b){const c=a.dataset.src;if(!c)b&&customElements.define(b.tagName,b.cls);else if(_cachedTemplates[c])a.innerHTML=_cachedTemplates[c],b&&customElements.define(b.tagName,b.cls);else{if(fetchInProgress[c])return void(b&&setTimeout(()=>{loadTemplate(a,b)},100));fetchInProgress[c]=!0,fetch(c,{credentials:'include'}).then((d)=>{d.text().then((d)=>{fetchInProgress[c]=!1,_cachedTemplates[c]=d,a.innerHTML=d,a.setAttribute('loaded',''),b&&customElements.define(b.tagName,b.cls)})})}}export class TemplMount extends HTMLElement{constructor(){super(),TemplMount._alreadyDidGlobalCheck||(TemplMount._alreadyDidGlobalCheck=!0,this.loadTemplatesOutsideShadowDOM(),'loading'===document.readyState?document.addEventListener('DOMContentLoaded',()=>{this.loadTemplatesOutsideShadowDOM(),this.monitorHeadForTemplates()}):this.monitorHeadForTemplates())}static get is(){return'templ-mount'}getHost(){const a=this.parentNode;return a.host}loadTemplates(a){const b=a.querySelectorAll('template[data-src]');for(let c=0,d=b.length;c<d;c++)loadTemplate(b[c])}loadTemplatesOutsideShadowDOM(){this.loadTemplates(document)}loadTemplateInsideShadowDOM(){const a=this.getHost();a&&this.loadTemplates(a)}monitorHeadForTemplates(){this._observer=new MutationObserver((a)=>{a.forEach((a)=>{a.addedNodes.forEach((a)=>{'TEMPLATE'===a.tagName&&loadTemplate(a)})})})}connectedCallback(){this.loadTemplateInsideShadowDOM(),'loading'===document.readyState&&document.addEventListener('DOMContentLoaded',()=>{this.loadTemplateInsideShadowDOM()})}}TemplMount._alreadyDidGlobalCheck=!1,customElements.define(TemplMount.is,TemplMount);