import{XtalShadow,initCE}from'./xtal-shadow.js';export class XtalMaterialInput extends XtalShadow{static get is(){return'xtal-material-input'}customizeClone(a){super.customizeClone(a),this._inputElement=a.querySelector('input'),this._inputElement.setAttribute('type',this.getType());for(let b=0,c=this.attributes.length;b<c;b++){const a=this.attributes[b];'type'===a.name||this._inputElement.setAttribute(a.name,a.value)}}initShadowRoot(){this.addInputListener(),this._inputElement.addEventListener('change',()=>{let a=this._inputElement;a&&a.matches('.form-element-field')&&a.classList[a.value?'add':'remove']('-hasvalue')})}get value(){return this._inputElement.value}set value(a){this._inputElement.value=a}getType(){return'input'}addEventListener(a,b){a.endsWith('-changed')?super.addEventListener(a,b):this._inputElement.addEventListener(a,b)}addInputListener(){this._inputElement.addEventListener('input',()=>{this.emitEvent()})}emitEvent(){const a=new CustomEvent('value-changed',{detail:{value:this._inputElement.value},bubbles:!0,composed:!1});this.dispatchEvent(a)}_upgradeProperties(a){a.forEach((a)=>{if(this.hasOwnProperty(a)){let b=this[a];delete this[a],this[a]=b}})}connectedCallback(){this._upgradeProperties(['value']),this.addMutationObserver()}addMutationObserver(){this._observer=new MutationObserver((a)=>{a.forEach((a)=>{this._inputElement[a.attributeName]=this[a.attributeName]})}),this._observer.observe(this,{attributes:!0})}disconnectedCallback(){this._observer.disconnect()}}initCE(XtalMaterialInput.is,XtalMaterialInput);export class XtalMaterialEmailInput extends XtalMaterialInput{static get is(){return'xtal-material-email-input'}getType(){return'email'}}initCE(XtalMaterialEmailInput.is,XtalMaterialEmailInput);